# Generated by Django 3.2.20 on 2023-08-14 22:56

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='NutritionFacts',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('number', models.IntegerField()),
                ('classification', models.CharField(max_length=10)),
                ('name', models.CharField(max_length=60)),
                ('disposalRate', models.FloatField()),
                ('energyJ', models.FloatField()),
                ('energyCal', models.FloatField()),
                ('moisture', models.FloatField()),
                ('proteinByAminoAcidComposition', models.FloatField()),
                ('protein', models.FloatField()),
                ('fattyAcidTriAcylGlycerolEquivalent', models.FloatField()),
                ('cholesterol', models.FloatField()),
                ('lipid', models.FloatField()),
                ('availableCarbohydrateMonosaccharideEquivalent', models.FloatField()),
                ('availableCarbohydrateMassTotal', models.FloatField()),
                ('deductionLawByAvailableCarbohydrate', models.FloatField()),
                ('foodFiberTotal', models.FloatField()),
                ('sugarAlcohol', models.FloatField()),
                ('carbohydrate', models.FloatField()),
                ('organicAcid', models.FloatField()),
                ('ash', models.FloatField()),
                ('natrium', models.FloatField()),
                ('potassium', models.FloatField()),
                ('calcium', models.FloatField()),
                ('magnesium', models.FloatField()),
                ('phosphorus', models.FloatField()),
                ('iron', models.FloatField()),
                ('zinc', models.FloatField()),
                ('copper', models.FloatField()),
                ('manganese', models.FloatField()),
                ('iodine', models.FloatField()),
                ('selenium', models.FloatField()),
                ('chrome', models.FloatField()),
                ('molybdenum', models.FloatField()),
                ('retinol', models.FloatField()),
                ('alphaCarotene', models.FloatField()),
                ('betaCarotene', models.FloatField()),
                ('betaCryptoxanthin', models.FloatField()),
                ('betaCaroteneEquivalent', models.FloatField()),
                ('vitaminA', models.FloatField()),
                ('vitaminD', models.FloatField()),
                ('vitaminE', models.FloatField()),
                ('betaTocopherol', models.FloatField()),
                ('gammaTocopherol', models.FloatField()),
                ('deltaTocopherol', models.FloatField()),
                ('vitaminK', models.FloatField()),
                ('vitaminB1', models.FloatField()),
                ('vitaminB2', models.FloatField()),
                ('niacin', models.FloatField()),
                ('niacinEquivalent', models.FloatField()),
                ('vitaminB6', models.FloatField()),
                ('vitaminB12', models.FloatField()),
                ('folicAcid', models.FloatField()),
                ('pantothenicAcid', models.FloatField()),
                ('biotin', models.FloatField()),
                ('vitaminC', models.FloatField()),
                ('alcohol', models.FloatField()),
                ('salt', models.FloatField()),
                ('note', models.CharField(blank=True, max_length=150, null=True)),
            ],
        ),
    ]
